# excution begins at address 0x0
    .pos 0x0
    irmovq stack, %rsp
    call main
    halt

# sample linked list

    .align 8
ele1:
    .quad 0x00a
    .quad ele2
ele2:
    .quad 0x0b0
    .quad ele3
ele3:
    .quad 0xc00
    .quad 0

main:
    irmovq ele1, %rdi
    call rsum_list
    ret



# long rsum_list(list_ptr ls)
# ptr in %rdi
rsum_list:
    xorq %rax, %rax
    andq %rdi, %rdi
    je return

    xorq %rdx, %rdx
    mrmovq (%rdi), %rdx
    pushq %rdx

    mrmovq 8(%rdi), %rdi                         # prepare args
    call rsum_list

    popq %rdx
    addq %rdx, %rax

return:
    ret
    
    

# stack starts here and grows to lower addresses
    .pos 0x400

stack:
