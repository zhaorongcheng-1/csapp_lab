# excution begins at address 0x0
    .pos 0x0
    irmovq stack, %rsp
    call main
    halt

.align 8
# source block
src:
    .quad 0x00a
    .quad 0x0b0
    .quad 0xc00

# dest block
dest:
    .quad 0x111
    .quad 0x222
    .quad 0x333






main:
    irmovq src, %rdi
    irmovq dest, %rsi
    irmovq $3, %rdx
    call copy_block
    ret



# long copy_block(long *src, long *dest, long len)
# src in %rdi, dest in %rsi. len in %rdx 
copy_block:
    xorq %rax, %rax
    irmovq $8, %r8
    irmovq $1, %r9    
    andq %rdx, %rdx
    jmp test


loop:
    mrmovq (%rdi), %r10
    addq %r8, %rdi
    rmmovq %r10, (%rsi)
    addq %r8, %rsi
    xorq %r10, %rax
    subq %r9, %rdx                   # len--, SET CC

test:
    jne loop
    ret




# stack starts here and grows to lower addresses
    .pos 0x200

stack:
